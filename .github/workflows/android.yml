name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      release_tag:
        description: vx.y.z
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          java-package: 'jdk'
          cache: 'gradle'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Set up Keystore
        run: |
          mkdir -p $RUNNER_TEMP/keystores
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > $RUNNER_TEMP/keystores/keystore.jks

      - name: Build and Sign APK
        env:
          CI: true
          KEYSTORE_PATH: ${{ runner.temp }}/keystores/keystore.jks
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          ./gradlew assembleRelease --stacktrace

      - name: Rename APK
        run: |
          cp app/build/outputs/apk/release/app-release.apk app-release.apk

      - name: Verify APK Signature
        run: |
          # Находим актуальную версию apksigner
          APKSIGNER=$(find $ANDROID_HOME/build-tools -name "apksigner" | sort -V | tail -n 1)
          echo "Using apksigner: $APKSIGNER"
          
          # Проверяем подпись
          $APKSIGNER verify --verbose app-release.apk

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk-artifact
          path: app-release.apk
          compression-level: 5

  release:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: apk-artifact

      - name: Get Release Tag
        id: get_tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ inputs.release_tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          files: |
            app-release.apk
          draft: false
          prerelease: false
          generate_release_notes: true